// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  ruet_id     Int     @unique
  fullname    String  @db.VarChar(25)
  email       String  @unique
  password    String
  is_verified Boolean @default(false)
  status      Status  @default(UNRESTRICTED)
  role        Role    @default(USER)
  code        Code?

  material          Material[]      @relation(name: "uploader")
  approved_material Material[]      @relation(name: "approver")
  material_drive_file_id     Material_Link[]
  thumbnail_link Thumnail_Link[]
}

model Code {
  id      Int    @id @default(autoincrement())
  code    String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int    @unique
}

model Material {
  id          Int    @id @default(autoincrement())
  title       String @unique
  description String
  uploader_id Int
  course_id   Int
  approver_id Int?
  material_link_id Int
  thumbnail_link_id Int


  uploader User   @relation(name: "uploader", fields: [uploader_id], references: [id], onDelete: SetNull)
  course   Course @relation(fields: [course_id], references: [id], onDelete: SetNull)
  approver User?  @relation(name: "approver", fields: [approver_id], references: [id], onDelete: SetNull)
  material_link Material_Link @relation(fields: [material_link_id], references: [id], onDelete: Cascade)
  thumbnail_link Thumnail_Link @relation(fields: [thumbnail_link_id], references: [id], onDelete: Cascade)

  @@unique([id, uploader_id])
}

model Thumnail_Link {
  id Int @id @default(autoincrement())
  url String @unique
  uploader_id Int

  uploader User @relation(fields: [uploader_id], references: [id], onDelete: SetNull)
  material Material?
}

model Material_Link {
  id            Int    @id @default(autoincrement())
  drive_file_id String @unique
  uploader_id   Int

  uploader User @relation(fields: [uploader_id], references: [id], onDelete: SetNull)
  material Material?
}

model Course {
  id            Int        @id @default(autoincrement())
  code          String     @unique
  title         String
  year          Int
  semester      Semester
  department_id Int
  material      Material[]

  department Department @relation(fields: [department_id], references: [id], onDelete: SetNull)
}

model Department {
  id          Int      @id @default(autoincrement())
  acronym     String   @unique
  description String   @unique
  course      Course[]
}

enum Role {
  USER
  STAFF
  ADMIN
}

enum Status {
  RESTRICTED
  UNRESTRICTED
}

enum Semester {
  ODD
  EVEN
}
